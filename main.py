import os
import logging
import random
import datetime
import re
import requests
from flask import Flask, request
from telegram import Bot, Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import Dispatcher, CommandHandler, MessageHandler, Filters, CallbackContext

app = Flask(__name__)
TOKEN = os.getenv("TOKEN")
bot = Bot(token=TOKEN)
dispatcher = Dispatcher(bot, update_queue=None, workers=4, use_context=True)
SAVETUBE_KEY = os.getenv("SAVETUBE_KEY")

admins = {}
warns = {}
donke_stats = {}
user_cam_time = {}

# ------------------ –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ ------------------ #

def start(update: Update, context: CallbackContext):
    update.message.reply_text(
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî –º–Ω–æ–≥–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –±–æ—Ç MultiBotX!\n"
        "–í–æ—Ç —á—Ç–æ —è —É–º–µ—é:\n"
        "üîπ –ú–æ–¥–µ—Ä–∞—Ü–∏—è (–±–µ–∑ /): –º—É—Ç, –≤–∞—Ä–Ω, –±–∞–Ω...\n"
        "üîπ –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è: —à—É—Ç–∫–∏, –¥–æ–Ω–∫–µ, —Ñ–∞–∫—Ç—ã, —Ü–∏—Ç–∞—Ç—ã\n"
        "üîπ –ö–æ—à–∫–∏, —Å–æ–±–∞–∫–∏, –∫—É–±–∏–∫ üé≤\n"
        "üîπ –í–∏–¥–µ–æ –∏–∑ TikTok –∏ YouTube\n"
        "üîπ –ü–∞—Å—Ö–∞–ª–∫–∏ –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ!\n\n"
        "–ù–∞–ø–∏—à–∏ /help —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã."
    )

def help_command(update: Update, context: CallbackContext):
    update.message.reply_text(
        "üìñ –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:\n"
        "/start ‚Äî –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞\n"
        "/help ‚Äî –ø–æ–º–æ—â—å\n"
        "/joke ‚Äî —Ä–∞–Ω–¥–æ–º–Ω–∞—è —à—É—Ç–∫–∞\n"
        "/donke ‚Äî —à—É—Ç–∫–∞ –ø—Ä–æ Donke\n"
        "/fact ‚Äî –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç\n"
        "/quote ‚Äî —Ü–∏—Ç–∞—Ç–∞\n"
        "/cat ‚Äî —Å–ª—É—á–∞–π–Ω–∞—è –∫–æ—à–∫–∞\n"
        "/dog ‚Äî —Å–ª—É—á–∞–π–Ω–∞—è —Å–æ–±–∞–∫–∞\n"
        "/dice ‚Äî –±—Ä–æ—Å–∏—Ç—å –∫—É–±–∏–∫ üé≤\n"
        "/camdonke ‚Äî –∑–∞–ª–∏—Ç—å –≤ –î–æ–Ω–∫–µ\n"
        "/topdonke ‚Äî —Ç–æ–ø –¥–æ–Ω–∞—Ç–µ—Ä–æ–≤ –≤ –î–æ–Ω–∫–µ\n"
        "üé¨ –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ TikTok –∏–ª–∏ YouTube"
    )

# ------------------ –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è ------------------ #

jokes = [
    "‚Äî –ß—Ç–æ –¥–µ–ª–∞–µ—Ç –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç –≤ —Ç—É–∞–ª–µ—Ç–µ?\n‚Äî –ö–æ–º–º–∏—Ç üí©",
    "–ï—Å–ª–∏ –Ω–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è ‚Äî –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏. –ï—Å–ª–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç ‚Äî —É–¥–∞–ª–∏ –ø—Ä–æ–¥.",
    "‚Äî –ü–æ—á–µ–º—É —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–µ—Ä –Ω–µ —Å–º–æ–≥ –Ω–∞–π—Ç–∏ —Ä–∞–±–æ—Ç—É?\n‚Äî –£ –Ω–µ–≥–æ –Ω–µ –±—ã–ª–æ —Å—Ç–∏–ª–µ–π üòÖ",
    "–£–º–µ—Ä–µ—Ç—å –æ—Ç —à—É—Ç–∫–∏ ‚Äî —ç—Ç–æ —Ñ–∞—Ç–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞.",
    "–í—Å—ë —Ä–∞–±–æ—Ç–∞–µ—Ç? –ù–µ —Ç—Ä–æ–≥–∞–π. –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç? –í—Å—ë —Ä–∞–≤–Ω–æ –Ω–µ —Ç—Ä–æ–≥–∞–π."
]

donke_jokes = [
    "Donke –ø—ã—Ç–∞–ª—Å—è –≤—ã—É—á–∏—Ç—å Python, –Ω–æ –Ω–∞–ø–∏—Å–∞–ª –≤–∏—Ä—É—Å –Ω–∞ Pascal.",
    "Donke –¥—É–º–∞–µ—Ç, —á—Ç–æ HTML ‚Äî —ç—Ç–æ –≤–∏—Ä—É—Å –æ—Ç –º–∏–∫—Ä–æ–≤–æ–ª–Ω–æ–≤–∫–∏.",
    "Donke –ø–æ—Å—Ç–∞–≤–∏–ª Linux‚Ä¶ –Ω–∞ –±—É–º–∞–≥—É.",
    "Donke —É—á–∏—Ç JS 3-–π –≥–æ–¥ –∏ –≤—Å—ë –µ—â—ë –ø–∏—à–µ—Ç alert('–ü—Ä–∏–≤–µ—Ç!').",
    "Donke –æ—Ç–∫—Ä—ã–ª TikTok –∏ –ø–æ–¥—É–º–∞–ª, —á—Ç–æ —ç—Ç–æ —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä."
]

facts = [
    "üîç –õ—é–¥–∏ –º–æ—Ä–≥–∞—é—Ç –ø—Ä–∏–º–µ—Ä–Ω–æ 20 —Ä–∞–∑ –≤ –º–∏–Ω—É—Ç—É.",
    "üêô –£ –æ—Å—å–º–∏–Ω–æ–≥–∞ —Ç—Ä–∏ —Å–µ—Ä–¥—Ü–∞.",
    "üåå –°–≤–µ—Ç –æ—Ç –°–æ–ª–Ω—Ü–∞ –¥–æ—Ö–æ–¥–∏—Ç –¥–æ –ó–µ–º–ª–∏ –∑–∞ 8 –º–∏–Ω—É—Ç.",
    "ü¶ã –ë–∞–±–æ—á–∫–∏ –ø—Ä–æ–±—É—é—Ç –≤–∫—É—Å –ª–∞–ø–∫–∞–º–∏.",
    "üß† –ú–æ–∑–≥ –ø–æ—Ç—Ä–µ–±–ª—è–µ—Ç 20% —ç–Ω–µ—Ä–≥–∏–∏ —Ç–µ–ª–∞."
]

quotes = [
    "üí° ¬´–¢–æ—Ç, –∫—Ç–æ —Ö–æ—á–µ—Ç ‚Äî –∏—â–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏, –∫—Ç–æ –Ω–µ —Ö–æ—á–µ—Ç ‚Äî –∏—â–µ—Ç –ø—Ä–∏—á–∏–Ω—ã.¬ª",
    "üî• ¬´–£—Å–ø–µ—Ö –ø—Ä–∏—Ö–æ–¥–∏—Ç –∫ —Ç–µ–º, –∫—Ç–æ –¥–µ–π—Å—Ç–≤—É–µ—Ç, –∞ –Ω–µ –∂–¥—ë—Ç.¬ª",
    "üöÄ ¬´–ö–∞–∂–¥—ã–π —à–∞–≥ ‚Äî —ç—Ç–æ —à–∞–Ω—Å —Å—Ç–∞—Ç—å –ª—É—á—à–µ.¬ª",
    "üß† ¬´–ú—É–¥—Ä —Ç–æ—Ç, –∫—Ç–æ —É–º–µ–µ—Ç —Å–ª—É—à–∞—Ç—å.¬ª",
    "üåü ¬´–í–µ—Ä–∏—Ç—å –≤ —Å–µ–±—è ‚Äî –∑–Ω–∞—á–∏—Ç –±—ã—Ç—å –Ω–µ–ø–æ–±–µ–¥–∏–º—ã–º.¬ª"
]

def get_random(update: Update, items, label):
    update.message.reply_text(f"{label}\n\n{random.choice(items)}")

def joke(update: Update, context: CallbackContext):
    get_random(update, jokes, "üòÇ –®—É—Ç–∫–∞:")

def donke(update: Update, context: CallbackContext):
    get_random(update, donke_jokes, "ü¶ç Donke-—é–º–æ—Ä:")

def fact(update: Update, context: CallbackContext):
    get_random(update, facts, "üìò –§–∞–∫—Ç:")

def quote(update: Update, context: CallbackContext):
    get_random(update, quotes, "üìù –¶–∏—Ç–∞—Ç–∞:")

def cat(update: Update, context: CallbackContext):
    r = requests.get("https://api.thecatapi.com/v1/images/search").json()
    update.message.reply_photo(r[0]["url"])

def dog(update: Update, context: CallbackContext):
    r = requests.get("https://dog.ceo/api/breeds/image/random").json()
    update.message.reply_photo(r["message"])

def dice(update: Update, context: CallbackContext):
    update.message.reply_dice()

# ------------------ Donke Cam ------------------ #

def camdonke(update: Update, context: CallbackContext):
    user = update.message.from_user
    uid = user.id
    today = datetime.date.today()

    if user_cam_time.get(uid) == today:
        update.message.reply_text("ü§ö –°–µ–≥–æ–¥–Ω—è —Ç—ã —É–∂–µ –∑–∞–ª–∏–≤–∞–ª –≤ –î–æ–Ω–∫–µ. –í–æ–∑–≤—Ä–∞—â–∞–π—Å—è –∑–∞–≤—Ç—Ä–∞.")
        return

    amount = random.randint(1, 100)
    user_cam_time[uid] = today
    donke_stats[uid] = donke_stats.get(uid, 0) + amount

    update.message.reply_text(
        f"üí¶ –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–ª–∏–ª–∏ –≤ Donke {amount} –ª–∏—Ç—Ä–æ–≤ —Å–ø–µ—Ä–º—ã!\n"
        "ü´É –ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –≤–∫–ª–∞–¥ –≤ –≥–µ–Ω–æ—Ñ–æ–Ω–¥ Donke Nation‚Ñ¢Ô∏è."
    )

def topdonke(update: Update, context: CallbackContext):
    if not donke_stats:
        update.message.reply_text("üòî –ü–æ–∫–∞ –Ω–∏–∫—Ç–æ –Ω–µ –∑–∞–ª–∏–≤–∞–ª –≤ Donke.")
        return
    top = sorted(donke_stats.items(), key=lambda x: x[1], reverse=True)[:50]
    text = "üî• –¢–æ–ø 50 –∑–∞–ª–∏–≤—â–∏–∫–æ–≤ –≤ Donke:\n\n"
    for i, (uid, amount) in enumerate(top, 1):
        name = bot.get_chat(uid).first_name
        text += f"{i}. {name} ‚Äî {amount} –ª.\n"
    update.message.reply_text(text)

# ------------------ –í–∏–¥–µ–æ –∏–∑ TikTok –∏ YouTube ------------------ #

def download_video(update: Update, context: CallbackContext):
    url = update.message.text.strip()
    if not ("tiktok.com" in url or "youtube.com" in url or "youtu.be" in url):
        return
    update.message.reply_text("üîÑ –ü—ã—Ç–∞—é—Å—å —Å–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...")

    try:
        r = requests.post("https://api.savetube.me/info", json={"url": url}, headers={
            "X-API-KEY": SAVETUBE_KEY
        }).json()
        video_url = r["url"]
        title = r.get("title", "–í–∏–¥–µ–æ")
        update.message.reply_video(video=video_url, caption=title)
    except Exception as e:
        update.message.reply_text("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

# ------------------ –ú–æ–¥–µ—Ä–∞—Ü–∏—è –±–µ–∑ '/' ------------------ #

def moderation(update: Update, context: CallbackContext):
    text = update.message.text.lower()
    if update.message.reply_to_message is None:
        return

    cmd = text.strip()
    user = update.message.reply_to_message.from_user
    chat = update.message.chat

    try:
        if cmd == "–º—É—Ç":
            bot.restrict_chat_member(chat.id, user.id, permissions=telegram.ChatPermissions(can_send_messages=False))
            update.message.reply_text("üîá –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–º—É—á–µ–Ω.")
        elif cmd == "—Ä–∞–∑–º—É—Ç" or cmd == "–∞–Ω–º—É—Ç":
            bot.restrict_chat_member(chat.id, user.id, permissions=telegram.ChatPermissions(can_send_messages=True))
            update.message.reply_text("üîä –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–∑–º—É—á–µ–Ω.")
        elif cmd == "–≤–∞—Ä–Ω":
            warns[user.id] = warns.get(user.id, 0) + 1
            update.message.reply_text(f"‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ ({warns[user.id]})")
        elif cmd == "–±–∞–Ω":
            bot.kick_chat_member(chat.id, user.id)
            update.message.reply_text("‚õî –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–∞–Ω–µ–Ω.")
        elif cmd == "–∞–Ω–±–∞–Ω" or cmd == "—Ä–∞–∑–±–∞–Ω":
            bot.unban_chat_member(chat.id, user.id)
            update.message.reply_text("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–∑–±–∞–Ω–µ–Ω.")
    except:
        update.message.reply_text("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ. –£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤?")

# ------------------ –ê–≤—Ç–æ—Ñ—É–Ω–∫—Ü–∏–∏ ------------------ #

def welcome(update: Update, context: CallbackContext):
    for member in update.message.new_chat_members:
        update.message.reply_text(f"üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {member.full_name}!")

def filter_swear(update: Update, context: CallbackContext):
    text = update.message.text.lower()
    bad_words = ["–±–ª–∏–Ω", "–¥—É—Ä–∞–∫", "–∏–¥–∏–æ—Ç", "–æ—Å—ë–ª"]
    if any(word in text for word in bad_words):
        update.message.delete()
        update.message.reply_text("üö´ –ë–µ–∑ –º–∞—Ç–∞!")

# ------------------ –û–±—Ä–∞–±–æ—Ç–∫–∞ ------------------ #

dispatcher.add_handler(CommandHandler("start", start))
dispatcher.add_handler(CommandHandler("help", help_command))
dispatcher.add_handler(CommandHandler("joke", joke))
dispatcher.add_handler(CommandHandler("donke", donke))
dispatcher.add_handler(CommandHandler("fact", fact))
dispatcher.add_handler(CommandHandler("quote", quote))
dispatcher.add_handler(CommandHandler("cat", cat))
dispatcher.add_handler(CommandHandler("dog", dog))
dispatcher.add_handler(CommandHandler("dice", dice))
dispatcher.add_handler(CommandHandler("camdonke", camdonke))
dispatcher.add_handler(CommandHandler("topdonke", topdonke))
dispatcher.add_handler(MessageHandler(Filters.text & ~Filters.command, moderation))
dispatcher.add_handler(MessageHandler(Filters.text & ~Filters.command, download_video))
dispatcher.add_handler(MessageHandler(Filters.status_update.new_chat_members, welcome))
dispatcher.add_handler(MessageHandler(Filters.text, filter_swear))

# ------------------ Flask ------------------ #

@app.route(f"/{TOKEN}", methods=["POST"])
def webhook():
    dispatcher.process_update(Update.de_json(request.get_json(force=True), bot))
    return "OK"

@app.route("/")
def index():
    return "MultiBotX —Ä–∞–±–æ—Ç–∞–µ—Ç!"

if __name__ == "__main__":
    bot.delete_webhook()
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 5000)))