from flask import Flask
import telebot
from telebot import types
from telebot.types import ChatPermissions
import os
import time
import requests

app = Flask(__name__)

@app.route('/')
def home():
    return 'MultiBotX is running!'

# –¢–æ–∫–µ–Ω Telegram-–±–æ—Ç–∞
TOKEN = os.environ.get("BOT_TOKEN")
bot = telebot.TeleBot(TOKEN)

# ‚úÖ –ó–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ç–≤–æ–π –∫–ª—é—á SaveTube
SAVETUBE_API_KEY = "382735d147msh533d7dec3c4d3abp12b125jsnfa97a86f84db"

# –ö–æ–º–∞–Ω–¥–∞ /start
@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(message.chat.id, f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! –Ø ‚Äî MultiBotX.\n–ù–∞–ø–∏—à–∏ /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥.")

# –ö–æ–º–∞–Ω–¥–∞ /help
@bot.message_handler(commands=['help'])
def help(message):
    help_text = (
        "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "/warn ‚Äî –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ\n"
        "/mute ‚Äî –ú—É—Ç –Ω–∞ 1 —á–∞—Å\n"
        "/unmute ‚Äî –†–∞–∑–º—É—Ç\n"
        "/ban ‚Äî –ë–∞–Ω\n"
        "/unban ‚Äî –†–∞–∑–±–∞–Ω\n"
        "/yt <—Å—Å—ã–ª–∫–∞> ‚Äî –°–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ —Å YouTube\n"
        "/tt <—Å—Å—ã–ª–∫–∞> ‚Äî –°–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ –∏–∑ TikTok\n"
    )
    bot.send_message(message.chat.id, help_text)

# /warn
@bot.message_handler(commands=['warn'])
def warn(message):
    if message.reply_to_message:
        user = message.reply_to_message.from_user
        bot.send_message(message.chat.id, f"‚ö†Ô∏è {user.first_name} –ø–æ–ª—É—á–∏–ª –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ!")
    else:
        bot.reply_to(message, "–ö–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ.")

# /mute
@bot.message_handler(commands=['mute'])
def mute(message):
    if message.reply_to_message:
        try:
            until_time = time.time() + 60 * 60
            bot.restrict_chat_member(
                chat_id=message.chat.id,
                user_id=message.reply_to_message.from_user.id,
                permissions=ChatPermissions(can_send_messages=False),
                until_date=until_time
            )
            bot.send_message(message.chat.id, "üîá –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–º—É—á–µ–Ω –Ω–∞ 1 —á–∞—Å.")
        except Exception as e:
            bot.send_message(message.chat.id, f"–û—à–∏–±–∫–∞: {e}")
    else:
        bot.reply_to(message, "–û—Ç–≤–µ—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")

# /unmute
@bot.message_handler(commands=['unmute'])
def unmute(message):
    if message.reply_to_message:
        try:
            bot.restrict_chat_member(
                chat_id=message.chat.id,
                user_id=message.reply_to_message.from_user.id,
                permissions=ChatPermissions(can_send_messages=True)
            )
            bot.send_message(message.chat.id, "üîä –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–∑–º—É—á–µ–Ω.")
        except Exception as e:
            bot.send_message(message.chat.id, f"–û—à–∏–±–∫–∞: {e}")
    else:
        bot.reply_to(message, "–û—Ç–≤–µ—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")

# /ban
@bot.message_handler(commands=['ban'])
def ban(message):
    if message.reply_to_message:
        try:
            bot.ban_chat_member(message.chat.id, message.reply_to_message.from_user.id)
            bot.send_message(message.chat.id, "‚õî –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–∞–Ω–µ–Ω.")
        except Exception as e:
            bot.send_message(message.chat.id, f"–û—à–∏–±–∫–∞: {e}")
    else:
        bot.reply_to(message, "–û—Ç–≤–µ—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")

# /unban
@bot.message_handler(commands=['unban'])
def unban(message):
    if message.reply_to_message:
        try:
            bot.unban_chat_member(message.chat.id, message.reply_to_message.from_user.id)
            bot.send_message(message.chat.id, "‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–∑–±–∞–Ω–µ–Ω.")
        except Exception as e:
            bot.send_message(message.chat.id, f"–û—à–∏–±–∫–∞: {e}")
    else:
        bot.reply_to(message, "–û—Ç–≤–µ—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")

# üì• /yt ‚Äî –°–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ —Å YouTube
@bot.message_handler(commands=['yt'])
def download_youtube(message):
    try:
        url = message.text.split(' ', 1)[1]
    except:
        return bot.reply_to(message, "–£–∫–∞–∂–∏ —Å—Å—ã–ª–∫—É: /yt <—Å—Å—ã–ª–∫–∞>")

    headers = {
        "X-RapidAPI-Key": SAVETUBE_API_KEY,
        "X-RapidAPI-Host": "save-tube-video.p.rapidapi.com"
    }
    params = {"url": url}

    r = requests.get("https://save-tube-video.p.rapidapi.com/download", headers=headers, params=params)
    data = r.json()

    if "video_url" in data:
        video = data["video_url"]
        bot.send_message(message.chat.id, f"üé¨ –í–∏–¥–µ–æ —Å YouTube:\n{video}")
    else:
        bot.send_message(message.chat.id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ.")

# üì• /tt ‚Äî –°–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ –∏–∑ TikTok
@bot.message_handler(commands=['tt'])
def download_tiktok(message):
    try:
        url = message.text.split(' ', 1)[1]
    except:
        return bot.reply_to(message, "–£–∫–∞–∂–∏ —Å—Å—ã–ª–∫—É: /tt <—Å—Å—ã–ª–∫–∞>")

    headers = {
        "X-RapidAPI-Key": SAVETUBE_API_KEY,
        "X-RapidAPI-Host": "save-tube-video.p.rapidapi.com"
    }
    params = {"url": url}

    r = requests.get("https://save-tube-video.p.rapidapi.com/download", headers=headers, params=params)
    data = r.json()

    if "video_url" in data:
        video = data["video_url"]
        bot.send_message(message.chat.id, f"üìπ –í–∏–¥–µ–æ –∏–∑ TikTok:\n{video}")
    else:
        bot.send_message(message.chat.id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ.")

# üåÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    bot.remove_webhook()
    bot.polling(none_stop=True)