import os
import random
import logging
import requests
from flask import Flask, request
from telegram import Bot, Update, ChatPermissions, InputFile
from telegram.ext import Dispatcher, CommandHandler, MessageHandler, filters, CallbackContext
from dotenv import load_dotenv

load_dotenv()

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ---
TOKEN = os.getenv("BOT_TOKEN")
API = os.getenv("SAVE_TUBE_API_KEY")
HOST = os.getenv("RENDER_EXTERNAL_HOSTNAME")

bot = Bot(token=TOKEN)
app = Flask(__name__)
dispatcher = Dispatcher(bot=bot, update_queue=None, workers=4, use_context=True)

# --- –õ–æ–≥–≥–∏–Ω–≥ ---
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)

# --- –•—Ä–∞–Ω–∏–ª–∏—â–µ ---
warns = {}
donke_rating = {}

# --- –ö–æ–º–∞–Ω–¥—ã ---

def start(update: Update, context: CallbackContext):
    update.message.reply_text("üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç MultiBotX. –ù–∞–ø–∏—à–∏ /help, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, —á—Ç–æ —è —É–º–µ—é.")

def help_command(update: Update, context: CallbackContext):
    update.message.reply_text(
        "üõ† –ö–æ–º–∞–Ω–¥—ã:\n"
        "/joke ‚Äì —à—É—Ç–∫–∞\n"
        "/fact ‚Äì —Ñ–∞–∫—Ç\n"
        "/quote ‚Äì —Ü–∏—Ç–∞—Ç–∞\n"
        "/cat ‚Äì –∫–æ—Ç–∏–∫\n"
        "/dog ‚Äì –ø—ë—Å–∏–∫\n"
        "/meme ‚Äì –º–µ–º\n"
        "/dice ‚Äì –∫—É–±–∏–∫ üé≤\n"
        "/donke ‚Äì –ø–∞—Å—Ö–∞–ª–∫–∞\n"
        "/camdonke ‚Äì –º–æ–π —Ä–µ–π—Ç–∏–Ω–≥ donke\n"
        "/topdonke ‚Äì —Ç–æ–ø donke\n"
        "/yt <—Å—Å—ã–ª–∫–∞> ‚Äì —Å–∫–∞—á–∞—Ç—å YouTube\n"
        "/tt <—Å—Å—ã–ª–∫–∞> ‚Äì —Å–∫–∞—á–∞—Ç—å TikTok\n"
        "\nüõ° –ú–æ–¥–µ—Ä–∞—Ü–∏—è (–≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ):\n"
        "–≤–∞—Ä–Ω / –º—É—Ç / –±–∞–Ω / —Ä–∞–∑–º—É—Ç / –∞–Ω–º—É—Ç / —É–Ω–±–∞–Ω"
    )

# --- –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è ---

def joke(update: Update, context: CallbackContext):
    jokes = [
        "–ü–æ—á–µ–º—É –∫–æ–º–ø—å—é—Ç–µ—Ä –Ω–µ –º–æ–∂–µ—Ç –∏–≥—Ä–∞—Ç—å –≤ —Ñ—É—Ç–±–æ–ª? –û–Ω –±–æ–∏—Ç—Å—è –≤–∏—Ä—É—Å–æ–≤!",
        "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç—ã –Ω–µ –ø–ª–∞—á—É—Ç ‚Äî –æ–Ω–∏ –¥–µ–ª–∞—é—Ç –±—ç–∫–∞–ø—ã —ç–º–æ—Ü–∏–π.",
        "–£–ø–∞–ª —Å–µ—Ä–≤–µ—Ä? –ì–ª–∞–≤–Ω–æ–µ ‚Äî –Ω–µ –ø–∞–Ω–∏–∫–æ–≤–∞—Ç—å. –≠—Ç–æ –ø—Ä–æ—Å—Ç–æ —à–∞–Ω—Å –Ω–∞—á–∞—Ç—å –≤—Å—ë —Å –Ω—É–ª—è.",
        "–Ø –±—ã —Ä–∞—Å—Å–∫–∞–∑–∞–ª —Ç–µ–±–µ —à—É—Ç–∫—É –ø—Ä–æ UDP... –Ω–æ —Ç—ã –º–æ–≥ –±—ã –µ—ë –Ω–µ –ø–æ–ª—É—á–∏—Ç—å.",
        "–ß—ë—Ä–Ω—ã–π —é–º–æ—Ä –∫–∞–∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç ‚Äî –Ω–µ —É –≤—Å–µ—Ö —Ä–∞–±–æ—Ç–∞–µ—Ç."
    ]
    update.message.reply_text(random.choice(jokes))

def fact(update: Update, context: CallbackContext):
    facts = [
        "–û—Å—å–º–∏–Ω–æ–≥–∏ –∏–º–µ—é—Ç —Ç—Ä–∏ —Å–µ—Ä–¥—Ü–∞.",
        "–ú–µ–¥—É–∑—ã —Å—É—â–µ—Å—Ç–≤—É—é—Ç —É–∂–µ –±–æ–ª–µ–µ 600 –º–∏–ª–ª–∏–æ–Ω–æ–≤ –ª–µ—Ç.",
        "–°–∞–º—ã–π –±–æ–ª—å—à–æ–π –∂–∏–≤–æ–π –æ—Ä–≥–∞–Ω–∏–∑–º ‚Äî –≥—Ä–∏–± –≤ –û—Ä–µ–≥–æ–Ω–µ.",
        "Google –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –±–æ–ª–µ–µ 99 000 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ —Å–µ–∫—É–Ω–¥—É.",
        "–ü–µ—Ä–≤—ã–π e-mail –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ 1971 –≥–æ–¥—É."
    ]
    update.message.reply_text(random.choice(facts))

def quote(update: Update, context: CallbackContext):
    quotes = [
        "¬´–õ–æ–≥–∏–∫–∞ –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –≤–∞—Å –æ—Ç –ø—É–Ω–∫—Ç–∞ –ê –∫ –ø—É–Ω–∫—Ç—É –ë. –í–æ–æ–±—Ä–∞–∂–µ–Ω–∏–µ ‚Äî –∫—É–¥–∞ —É–≥–æ–¥–Ω–æ.¬ª ‚Äì –≠–π–Ω—à—Ç–µ–π–Ω",
        "¬´–ë—É–¥—å –∏–∑–º–µ–Ω–µ–Ω–∏–µ–º, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—á–µ—à—å –≤–∏–¥–µ—Ç—å –≤ –º–∏—Ä–µ.¬ª ‚Äì –ì–∞–Ω–¥–∏",
        "¬´–ö—Ç–æ —Ö–æ—á–µ—Ç ‚Äî –∏—â–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏. –ö—Ç–æ –Ω–µ —Ö–æ—á–µ—Ç ‚Äî –∏—â–µ—Ç –ø—Ä–∏—á–∏–Ω—ã.¬ª",
        "¬´–ß–µ–º –±–æ–ª—å—à–µ —É–∑–Ω–∞—ë—à—å, —Ç–µ–º –±–æ–ª—å—à–µ –ø–æ–Ω–∏–º–∞–µ—à—å, –∫–∞–∫ –º–∞–ª–æ –∑–Ω–∞–µ—à—å.¬ª ‚Äì –°–æ–∫—Ä–∞—Ç"
    ]
    update.message.reply_text(random.choice(quotes))

def cat(update: Update, context: CallbackContext):
    url = "https://cataas.com/cat"
    update.message.reply_photo(url)

def dog(update: Update, context: CallbackContext):
    res = requests.get("https://random.dog/woof.json").json()
    update.message.reply_photo(res['url'])

def meme(update: Update, context: CallbackContext):
    res = requests.get("https://meme-api.com/gimme").json()
    update.message.reply_photo(res['url'], caption=res['title'])

def dice(update: Update, context: CallbackContext):
    update.message.reply_dice()

# --- –ü–∞—Å—Ö–∞–ª–∫–∏ –∏ —Ä–µ–π—Ç–∏–Ω–≥ ---

def donke(update: Update, context: CallbackContext):
    user_id = update.effective_user.id
    username = update.effective_user.first_name
    donke_rating[user_id] = donke_rating.get(user_id, 0) + 1
    insults = [
        f"{username}, —Ç—ã donke –¥–æ–Ω–∫–∏–π—Å–∫–∏–π! ü§°",
        f"{username}, —Ç–≤–æ—é —Ç—É–ø–æ—Å—Ç—å –¥–∞–∂–µ AI –Ω–µ –º–æ–∂–µ—Ç —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å.",
        f"{username}, —Ç–µ–±—è –≤ —à—É—Ç–∫–∞—Ö –Ω–∏–∫—Ç–æ –Ω–µ –ø–µ—Ä–µ–ø–ª—é–Ω–µ—Ç. –ü–æ —Ç—É–ø–æ—Å—Ç–∏.",
        f"{username}, —Ç—ã ‚Äî —Ö–æ–¥—è—á–∏–π –±–∞–≥ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏. üêõ"
    ]
    update.message.reply_text(random.choice(insults))

def camdonke(update: Update, context: CallbackContext):
    user_id = update.effective_user.id
    count = donke_rating.get(user_id, 0)
    update.message.reply_text(f"–¢—ã donke {count} —Ä–∞–∑(–∞) ü§°")

def topdonke(update: Update, context: CallbackContext):
    if not donke_rating:
        update.message.reply_text("Donke –ø–æ–∫–∞ –Ω–µ—Ç. –ë—É–¥—å –ø–µ—Ä–≤—ã–º!")
        return
    top = sorted(donke_rating.items(), key=lambda x: x[1], reverse=True)
    msg = "üèÜ –¢–û–ü Donke:\n"
    for i, (user_id, count) in enumerate(top[:5], start=1):
        user = bot.get_chat_member(update.effective_chat.id, user_id).user
        msg += f"{i}. {user.first_name} ‚Äî {count}\n"
    update.message.reply_text(msg)

# --- –ú–æ–¥–µ—Ä–∞—Ü–∏—è (–±–µ–∑ "/") ---

def moderation_handler(update: Update, context: CallbackContext):
    text = update.message.text.lower()
    reply = update.message.reply_to_message
    if not reply:
        return

    member = update.effective_chat.get_member(update.effective_user.id)
    if not member.can_restrict_members:
        update.message.reply_text("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤.")
        return

    target = reply.from_user.id

    if "–≤–∞—Ä–Ω" in text:
        warns[target] = warns.get(target, 0) + 1
        update.message.reply_text(f"‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ. –í—Å–µ–≥–æ: {warns[target]}")
        if warns[target] >= 3:
            context.bot.ban_chat_member(update.effective_chat.id, target)
            update.message.reply_text("üö´ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–∞–Ω–µ–Ω –∑–∞ 3 –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è.")

    elif "–º—É—Ç" in text:
        context.bot.restrict_chat_member(update.effective_chat.id, target, ChatPermissions(can_send_messages=False))
        update.message.reply_text("üîá –ú—É—Ç –≤—ã–¥–∞–Ω.")

    elif "—Ä–∞–∑–º—É—Ç" in text or "–∞–Ω–º—É—Ç" in text:
        context.bot.restrict_chat_member(update.effective_chat.id, target, ChatPermissions(can_send_messages=True))
        update.message.reply_text("üîä –†–∞–∑–º—É—á–µ–Ω.")

    elif "–±–∞–Ω" in text:
        context.bot.ban_chat_member(update.effective_chat.id, target)
        update.message.reply_text("üö´ –ó–∞–±–∞–Ω–µ–Ω.")

    elif "—É–Ω–±–∞–Ω" in text:
        context.bot.unban_chat_member(update.effective_chat.id, target)
        update.message.reply_text("‚úÖ –†–∞–∑–±–∞–Ω–µ–Ω.")

# --- –í–∏–¥–µ–æ YouTube / TikTok ---

def download(update: Update, context: CallbackContext):
    if not context.args:
        update.message.reply_text("‚ùó –£–∫–∞–∂–∏ —Å—Å—ã–ª–∫—É: /yt <url> –∏–ª–∏ /tt <url>")
        return

    url = context.args[0]
    msg = update.message.reply_text("‚è¨ –ó–∞–≥—Ä—É–∂–∞—é –≤–∏–¥–µ–æ...")

    api_url = f"https://api.savetube.me/info?url={url}&apikey={API}"
    res = requests.get(api_url).json()

    try:
        title = res['title']
        video_url = res['url'][0]['url']
        caption = f"üé¨ <b>{title}</b>"
        update.message.reply_video(video=video_url, caption=caption, parse_mode='HTML')
        msg.delete()
    except:
        msg.edit_text("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ.")

# --- –•–µ–Ω–¥–ª–µ—Ä—ã ---

dispatcher.add_handler(CommandHandler("start", start))
dispatcher.add_handler(CommandHandler("help", help_command))
dispatcher.add_handler(CommandHandler("joke", joke))
dispatcher.add_handler(CommandHandler("fact", fact))
dispatcher.add_handler(CommandHandler("quote", quote))
dispatcher.add_handler(CommandHandler("cat", cat))
dispatcher.add_handler(CommandHandler("dog", dog))
dispatcher.add_handler(CommandHandler("meme", meme))
dispatcher.add_handler(CommandHandler("dice", dice))
dispatcher.add_handler(CommandHandler("donke", donke))
dispatcher.add_handler(CommandHandler("camdonke", camdonke))
dispatcher.add_handler(CommandHandler("topdonke", topdonke))
dispatcher.add_handler(CommandHandler("yt", download))
dispatcher.add_handler(CommandHandler("tt", download))
dispatcher.add_handler(MessageHandler(filters.TEXT & filters.REPLY, moderation_handler))

# --- Flask-—Ö–æ—Å—Ç–∏–Ω–≥ ---
@app.route(f"/{TOKEN}", methods=["POST"])
def webhook():
    update = Update.de_json(request.get_json(force=True), bot)
    dispatcher.process_update(update)
    return "ok"

@app.route("/")
def index():
    return "ü§ñ MultiBotX —Ä–∞–±–æ—Ç–∞–µ—Ç!"

if __name__ == "__main__":
    bot.delete_webhook()
    bot.set_webhook(f"https://{HOST}/{TOKEN}")
    app.run(host="0.0.0.0", port=8080)