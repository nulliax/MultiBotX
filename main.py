import os
import random
import requests
import telebot
from flask import Flask, request
from threading import Thread

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–æ–≤ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
TOKEN = os.getenv("TOKEN")
SAVETUBE_KEY = os.getenv("SAVETUBE_KEY")
bot = telebot.TeleBot(TOKEN)
app = Flask(__name__)

# ===================== Flask ping =====================
@app.route('/')
def home():
    return '‚úÖ MultiBotX —Ä–∞–±–æ—Ç–∞–µ—Ç!'

# ===================== –ú–æ–¥–µ—Ä–∞—Ü–∏—è =====================
@bot.message_handler(commands=['start', 'help'])
def send_welcome(message):
    bot.send_message(message.chat.id, "üëã –ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî MultiBotX.\n\nüîß –ú–æ–∏ —Ñ—É–Ω–∫—Ü–∏–∏:\n/menu ‚Äî –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n/warn, /mute, /ban ‚Äî –ú–æ–¥–µ—Ä–∞—Ü–∏—è\n/joke ‚Äî –®—É—Ç–∫–∞ –¥–Ω—è\n–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ TikTok –∏–ª–∏ YouTube ‚Äî —è —Å–∫–∞—á–∞—é –≤–∏–¥–µ–æ.")

@bot.message_handler(commands=['warn'])
def warn_user(message):
    if not message.reply_to_message:
        return bot.send_message(message.chat.id, "‚ö†Ô∏è –û—Ç–≤–µ—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã –≤—ã–¥–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ.")
    bot.send_message(message.chat.id, f"‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é @{message.reply_to_message.from_user.username or '–±–µ–∑ –Ω–∏–∫–∞'} –≤—ã–¥–∞–Ω–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ.")

@bot.message_handler(commands=['mute'])
def mute_user(message):
    if not message.reply_to_message:
        return bot.send_message(message.chat.id, "üîá –û—Ç–≤–µ—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –º—É—Ç–∞.")
    try:
        bot.restrict_chat_member(message.chat.id, message.reply_to_message.from_user.id,
            permissions=telebot.types.ChatPermissions(can_send_messages=False))
        bot.send_message(message.chat.id, "üîá –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—ã–ª –∑–∞–º—å—é—á–µ–Ω.")
    except Exception as e:
        bot.send_message(message.chat.id, f"‚ùå –û—à–∏–±–∫–∞: {e}")

@bot.message_handler(commands=['unmute'])
def unmute_user(message):
    if not message.reply_to_message:
        return bot.send_message(message.chat.id, "üîä –û—Ç–≤–µ—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ä–∞–∑–º—É—Ç–∞.")
    try:
        bot.restrict_chat_member(message.chat.id, message.reply_to_message.from_user.id,
            permissions=telebot.types.ChatPermissions(can_send_messages=True))
        bot.send_message(message.chat.id, "üîä –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–∑–º—å—é—á–µ–Ω.")
    except Exception as e:
        bot.send_message(message.chat.id, f"‚ùå –û—à–∏–±–∫–∞: {e}")

@bot.message_handler(commands=['ban'])
def ban_user(message):
    if not message.reply_to_message:
        return bot.send_message(message.chat.id, "üö´ –û—Ç–≤–µ—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –±–∞–Ω–∞.")
    try:
        bot.ban_chat_member(message.chat.id, message.reply_to_message.from_user.id)
        bot.send_message(message.chat.id, "üö´ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–∞–Ω–µ–Ω.")
    except Exception as e:
        bot.send_message(message.chat.id, f"‚ùå –û—à–∏–±–∫–∞: {e}")

@bot.message_handler(commands=['unban'])
def unban_user(message):
    if not message.reply_to_message:
        return bot.send_message(message.chat.id, "‚úÖ –û—Ç–≤–µ—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ä–∞–∑–±–∞–Ω–∏–≤–∞–Ω–∏—è.")
    try:
        bot.unban_chat_member(message.chat.id, message.reply_to_message.from_user.id)
        bot.send_message(message.chat.id, "‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–∑–±–∞–Ω–µ–Ω.")
    except Exception as e:
        bot.send_message(message.chat.id, f"‚ùå –û—à–∏–±–∫–∞: {e}")

# ===================== –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è =====================
jokes = [
    "–ü–æ—á–µ–º—É –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç—ã –ª—é–±—è—Ç —Ç–µ–º–Ω–æ—Ç—É? –ü–æ—Ç–æ–º—É —á—Ç–æ —Å–≤–µ—Ç –ø—Ä–∏—Ç—è–≥–∏–≤–∞–µ—Ç –±–∞–≥–∏!",
    "–ö–∞–∫ –∑–æ–≤—É—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ –±–µ–∑ –¥–µ–≤—É—à–∫–∏? Freelancer!",
    "–ß—Ç–æ –¥–µ–ª–∞–µ—Ç –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç, –µ—Å–ª–∏ —Ö–æ—á–µ—Ç –ø–æ—Ö—É–¥–µ—Ç—å? –£–¥–∞–ª—è–µ—Ç cookies!",
]

@bot.message_handler(commands=['joke'])
def joke_command(message):
    bot.send_message(message.chat.id, random.choice(jokes))

# ===================== –ê–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∞ –≤–∏–¥–µ–æ =====================
def download_video_from_url(url):
    try:
        response = requests.get(
            "https://save-tube-video-download.p.rapidapi.com/download",
            headers={
                "X-RapidAPI-Key": SAVETUBE_KEY,
                "X-RapidAPI-Host": "save-tube-video-download.p.rapidapi.com"
            },
            params={"url": url},
            timeout=10
        )
        data = response.json()
        if data and 'links' in data and data['links']:
            video = next((v for v in data['links'] if v.get('url')), None)
            return video['url'] if video else None
    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ:", e)
    return None

@bot.message_handler(func=lambda msg: 'tiktok.com' in msg.text or 'youtu' in msg.text)
def auto_video_downloader(message):
    url = message.text.strip()
    bot.send_chat_action(message.chat.id, 'upload_video')
    bot.send_message(message.chat.id, "üîÑ –°–∫–∞—á–∏–≤–∞—é –≤–∏–¥–µ–æ...")

    video_link = download_video_from_url(url)
    if video_link:
        try:
            bot.send_video(message.chat.id, video_link)
        except Exception as e:
            bot.send_message(message.chat.id, f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–∏–¥–µ–æ: {e}")
    else:
        bot.send_message(message.chat.id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≤–∏–¥–µ–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥—É—é —Å—Å—ã–ª–∫—É.")

# ===================== –ó–∞–ø—É—Å–∫ =====================
def start_bot():
    bot.remove_webhook()
    bot.infinity_polling()

if __name__ == '__main__':
    Thread(target=start_bot).start()
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 5000)))