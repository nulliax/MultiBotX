main.py

import os import random import datetime import logging from flask import Flask, request import telebot import requests from threading import Thread

TOKEN = os.getenv("BOT_TOKEN") SAVETUBE_KEY = os.getenv("SAVETUBE_KEY") ADMIN_IDS = [123456789]  # –ó–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ Telegram ID –∞–¥–º–∏–Ω–æ–≤

bot = telebot.TeleBot(TOKEN) app = Flask(name)

logging.basicConfig(level=logging.INFO) logger = logging.getLogger(name)

====== –ü–ï–†–ï–ú–ï–ù–ù–´–ï –î–õ–Ø –•–†–ê–ù–ï–ù–ò–Ø –î–ê–ù–ù–´–• =======

user_warns = {} camdonke_data = {}

====== –§–£–ù–ö–¶–ò–ò –£–¢–ò–õ–ò–¢–´ =======

def is_admin(user_id): return user_id in ADMIN_IDS

def get_random_joke(): jokes = [ "–ö–∞–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç —á–∏–Ω–∏—Ç –ª–∞–º–ø–æ—á–∫—É? –û–Ω –º–µ–Ω—è–µ—Ç –≤–µ—Å—å –¥–æ–º.", "–ü–æ—á–µ–º—É –∞–π—Ç–∏—à–Ω–∏–∫–∏ –ª—é–±—è—Ç –∑–∏–º—É? –ü–æ—Ç–æ–º—É —á—Ç–æ —Å–Ω–µ–≥ ‚Äì —ç—Ç–æ —Ñ–∏—á–∞, –∞ –Ω–µ –±–∞–≥.", "–ü–æ—á–µ–º—É Java-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–æ—Å—è—Ç –æ—á–∫–∏? –ü–æ—Ç–æ–º—É —á—Ç–æ –æ–Ω–∏ –Ω–µ C#", # ... –¥–æ–±–∞–≤—å –±–æ–ª—å—à–µ ] return random.choice(jokes)

def get_donke_joke(): jokes = [ "Donke –Ω–∞—Å—Ç–æ–ª—å–∫–æ —Ç—É–ø–æ–π, —á—Ç–æ –µ–≥–æ –¥–∞–∂–µ –ò–ò –Ω–µ —Ö–æ—á–µ—Ç –æ—Å–∫–æ—Ä–±–ª—è—Ç—å.", "Donke - —ç—Ç–æ –±–∞–≥, –∫–æ—Ç–æ—Ä—ã–π –Ω–∏–∫—Ç–æ –Ω–µ —Å—Ç–∞–ª —Ñ–∏–∫—Å–∏—Ç—å.", "Donke –Ω–µ —Ç–æ—Ä–º–æ–∑–∏—Ç, –æ–Ω –ø—Ä–æ—Å—Ç–æ –µ—â—ë –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª—Å—è...", # ... –¥–æ–±–∞–≤—å –µ—â—ë ] return random.choice(jokes)

def get_quote(): quotes = [ "–ù–∏–∫–æ–≥–¥–∞ –Ω–µ —Å–¥–∞–≤–∞–π—Å—è! –î–∞–∂–µ –µ—Å–ª–∏ —Ç—ã Donke.", "–°–∏–ª–∞ –≤ —Ç–µ—Ä–ø–µ–Ω–∏–∏... –∏ –≤ mute.", "–ü–∞–¥–∞—è —Å–µ–º—å —Ä–∞–∑ ‚Äî –ø–æ–¥–Ω–∏–º–∞–π—Å—è –≤–æ—Å–µ–º—å.", # ... –±–æ–ª—å—à–µ –º–æ—Ç–∏–≤–∞—Ü–∏–∏ ] return random.choice(quotes)

def get_fact(): facts = [ "–ö–æ—Ç—ã —Å–ø—è—Ç –≤ —Å—Ä–µ–¥–Ω–µ–º 70% —Å–≤–æ–µ–π –∂–∏–∑–Ω–∏.", "–í–æ–¥–∞ –º–æ–∂–µ—Ç —Å—É—â–µ—Å—Ç–≤–æ–≤–∞—Ç—å –≤ —Ç—Ä—ë—Ö —Å–æ—Å—Ç–æ—è–Ω–∏—è—Ö: –∂–∏–¥–∫–æ—Å—Ç—å, –ª—ë–¥ –∏ –ø–∞—Ä.", "–°–∞–º—ã–π –¥–ª–∏–Ω–Ω—ã–π —Ñ–∏–ª—å–º –¥–ª–∏—Ç—Å—è –±–æ–ª–µ–µ 85 —á–∞—Å–æ–≤.", # ... –±–æ–ª—å—à–µ —Ñ–∞–∫—Ç–æ–≤ ] return random.choice(facts)

====== –ö–û–ú–ê–ù–î–´ =======

@bot.message_handler(commands=['start']) def start(message): bot.reply_to(message, "–ü—Ä–∏–≤–µ—Ç! –Ø MultiBotX. –ü–∏—à–∏ /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥.")

@bot.message_handler(commands=['help']) def help_cmd(message): bot.reply_to(message, "/joke ‚Äî —à—É—Ç–∫–∞\n/quote ‚Äî —Ü–∏—Ç–∞—Ç–∞\n/fact ‚Äî —Ñ–∞–∫—Ç\n/cat ‚Äî —Ñ–æ—Ç–æ –∫–æ—Ç–∞\n/dog ‚Äî —Ñ–æ—Ç–æ —Å–æ–±–∞–∫–∏\n/dice ‚Äî –±—Ä–æ—Å–∏—Ç—å –∫—É–±–∏–∫\n/donke ‚Äî —à—É—Ç–∫–∞ –ø—Ä–æ Donke\n/camdonke ‚Äî –∑–∞–ª–∏—Ç—å –≤ Donke\n/topdonke ‚Äî —Ç–æ–ø Donke\n/youtube <—Å—Å—ã–ª–∫–∞>\n/tiktok <—Å—Å—ã–ª–∫–∞>")

@bot.message_handler(commands=['joke']) def joke(message): bot.reply_to(message, get_random_joke())

@bot.message_handler(commands=['quote']) def quote(message): bot.reply_to(message, get_quote())

@bot.message_handler(commands=['fact']) def fact(message): bot.reply_to(message, get_fact())

@bot.message_handler(commands=['cat']) def cat(message): r = requests.get("https://api.thecatapi.com/v1/images/search").json() bot.send_photo(message.chat.id, r[0]['url'])

@bot.message_handler(commands=['dog']) def dog(message): r = requests.get("https://dog.ceo/api/breeds/image/random").json() bot.send_photo(message.chat.id, r['message'])

@bot.message_handler(commands=['dice']) def dice(message): bot.send_dice(message.chat.id)

@bot.message_handler(commands=['donke']) def donke_joke(message): bot.reply_to(message, get_donke_joke())

@bot.message_handler(commands=['camdonke']) def camdonke(message): user_id = message.from_user.id today = datetime.date.today() if user_id in camdonke_data and camdonke_data[user_id]['date'] == today: bot.reply_to(message, "–°–µ–≥–æ–¥–Ω—è –≤—ã —É–∂–µ –∑–∞–ª–∏–ª–∏ –≤ Donke. –ü—Ä–∏—Ö–æ–¥–∏—Ç–µ –∑–∞–≤—Ç—Ä–∞!") else: amount = random.randint(1, 100) if user_id not in camdonke_data: camdonke_data[user_id] = {'total': 0} camdonke_data[user_id]['total'] += amount camdonke_data[user_id]['date'] = today bot.reply_to(message, f"–í—ã —É—Å–ø–µ—à–Ω–æ –≤–ª–∏–ª–∏ {amount} –ª–∏—Ç—Ä–æ–≤ –≤ Donke! Donke –∑–∞—Ö–ª—ë–±—ã–≤–∞–µ—Ç—Å—è –æ—Ç —Å—á–∞—Å—Ç—å—è.")

@bot.message_handler(commands=['topdonke']) def top_donke(message): if not camdonke_data: bot.reply_to(message, "Donke –µ—â—ë –ø—É—Å—Ç...") return sorted_users = sorted(camdonke_data.items(), key=lambda x: x[1]['total'], reverse=True) text = "üèÜ –¢–û–ü-50 –∑–∞–ª–∏–≤–∞–ª—å—â–∏–∫–æ–≤ –≤ Donke:\n" for i, (uid, data) in enumerate(sorted_users[:50], 1): text += f"{i}. {uid} ‚Äî {data['total']} –ª.\n" bot.reply_to(message, text)

@bot.message_handler(commands=['youtube']) def youtube_dl(message): try: url = message.text.split(" ", 1)[1] bot.reply_to(message, "‚è¨ –ü—ã—Ç–∞—é—Å—å —Å–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ —Å YouTube...") r = requests.get(f"https://api.savetube.me/ytdl?key={SAVETUBE_KEY}&url={url}").json() video_url = r.get("url") if video_url: bot.send_video(message.chat.id, video_url) else: bot.reply_to(message, "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ.") except: bot.reply_to(message, "–ù–µ–≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ü—Ä–∏–º–µ—Ä: /youtube <—Å—Å—ã–ª–∫–∞>")

@bot.message_handler(commands=['tiktok']) def tiktok_dl(message): try: url = message.text.split(" ", 1)[1] bot.reply_to(message, "‚è¨ –ü—ã—Ç–∞—é—Å—å —Å–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ –∏–∑ TikTok...") r = requests.get(f"https://api.savetube.me/ttdl?key={SAVETUBE_KEY}&url={url}").json() video_url = r.get("url") if video_url: bot.send_video(message.chat.id, video_url) else: bot.reply_to(message, "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ.") except: bot.reply_to(message, "–ù–µ–≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ü—Ä–∏–º–µ—Ä: /tiktok <—Å—Å—ã–ª–∫–∞>")

====== –ó–ê–ü–£–°–ö –§–õ–ê–°–ö =======

@app.route(f"/{TOKEN}", methods=['POST']) def webhook(): bot.process_new_updates([telebot.types.Update.de_json(request.stream.read().decode("utf-8"))]) return "OK", 200

@app.route("/") def index(): return "MultiBotX online."

def run(): app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 5000)))

if name == "main": Thread(target=run).start() bot.remove_webhook() bot.set_webhook(url=f"https://{os.environ['RENDER_EXTERNAL_HOSTNAME']}/{TOKEN}")

