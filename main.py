import os
import random
import requests
from flask import Flask, request
from threading import Thread
import telebot
from telebot import types

# ===================== –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è =====================
TOKEN = os.getenv("TOKEN")
SAVETUBE_KEY = os.getenv("SAVETUBE_KEY")
bot = telebot.TeleBot(TOKEN)
app = Flask(__name__)

# ===================== –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ =====================
@app.route('/')
def home():
    return "ü§ñ MultiBotX —Ä–∞–±–æ—Ç–∞–µ—Ç!"

# ===================== –ú–ï–ù–Æ =====================
@bot.message_handler(commands=['start', 'help', 'menu'])
def send_menu(message):
    menu_text = (
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø *MultiBotX* ‚Äî —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –±–æ—Ç —Å –º–Ω–æ–∂–µ—Å—Ç–≤–æ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π:\n\n"
        "üéõ *–ú–æ–¥–µ—Ä–∞—Ü–∏—è:*\n"
        "  ‚Ä¢ /warn ‚Äì –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ\n"
        "  ‚Ä¢ /mute ‚Äì –ú—É—Ç\n"
        "  ‚Ä¢ /unmute ‚Äì –†–∞–∑–º—É—Ç\n"
        "  ‚Ä¢ /ban ‚Äì –ë–∞–Ω\n"
        "  ‚Ä¢ /unban ‚Äì –†–∞–∑–±–∞–Ω\n\n"
        "üéâ *–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è:*\n"
        "  ‚Ä¢ /joke ‚Äì –®—É—Ç–∫–∞\n"
        "  ‚Ä¢ /fact ‚Äì –ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç\n"
        "  ‚Ä¢ /quote ‚Äì –¶–∏—Ç–∞—Ç–∞\n"
        "  ‚Ä¢ /cat ‚Äì –§–æ—Ç–æ –∫–æ—Ç–∏–∫–∞\n"
        "  ‚Ä¢ /dice ‚Äì –ë—Ä–æ—Å–∏—Ç—å –∫—É–±–∏–∫ üé≤\n"
        "  ‚Ä¢ /inspire ‚Äì –ú–æ—Ç–∏–≤–∞—Ü–∏—è üí°\n\n"
        "üì• *–°–∫–∞—á–∏–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ:*\n"
        "  –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É —Å YouTube –∏–ª–∏ TikTok, –∏ —è —Å–∫–∞—á–∞—é –≤–∏–¥–µ–æ!"
    )
    bot.send_message(message.chat.id, menu_text, parse_mode="Markdown")

# ===================== –ú–æ–¥–µ—Ä–∞—Ü–∏—è =====================
@bot.message_handler(commands=['warn'])
def warn_user(message):
    if not message.reply_to_message:
        return bot.reply_to(message, "‚ö†Ô∏è –û—Ç–≤–µ—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã –≤—ã–¥–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ.")
    bot.reply_to(message.reply_to_message, "‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ!")

@bot.message_handler(commands=['mute'])
def mute_user(message):
    if not message.reply_to_message:
        return bot.reply_to(message, "–û—Ç–≤–µ—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –º—É—Ç–∞.")
    try:
        bot.restrict_chat_member(message.chat.id, message.reply_to_message.from_user.id,
                                 permissions=types.ChatPermissions(can_send_messages=False))
        bot.reply_to(message.reply_to_message, "üîá –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—ã–ª –∑–∞–º—å—é—á–µ–Ω.")
    except Exception as e:
        bot.reply_to(message, f"–û—à–∏–±–∫–∞: {e}")

@bot.message_handler(commands=['unmute'])
def unmute_user(message):
    if not message.reply_to_message:
        return bot.reply_to(message, "–û—Ç–≤–µ—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ä–∞–∑–º—É—Ç–∞.")
    try:
        bot.restrict_chat_member(message.chat.id, message.reply_to_message.from_user.id,
                                 permissions=types.ChatPermissions(can_send_messages=True))
        bot.reply_to(message.reply_to_message, "üîä –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–∑–º—å—é—á–µ–Ω.")
    except Exception as e:
        bot.reply_to(message, f"–û—à–∏–±–∫–∞: {e}")

@bot.message_handler(commands=['ban'])
def ban_user(message):
    if not message.reply_to_message:
        return bot.reply_to(message, "–û—Ç–≤–µ—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –±–∞–Ω–∞.")
    try:
        bot.ban_chat_member(message.chat.id, message.reply_to_message.from_user.id)
        bot.reply_to(message.reply_to_message, "üö´ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–∞–Ω–µ–Ω.")
    except Exception as e:
        bot.reply_to(message, f"–û—à–∏–±–∫–∞: {e}")

@bot.message_handler(commands=['unban'])
def unban_user(message):
    if not message.reply_to_message:
        return bot.reply_to(message, "–û—Ç–≤–µ—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ä–∞–∑–±–∞–Ω–∏–≤–∞–Ω–∏—è.")
    try:
        bot.unban_chat_member(message.chat.id, message.reply_to_message.from_user.id)
        bot.reply_to(message.reply_to_message, "‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–∑–±–∞–Ω–µ–Ω.")
    except Exception as e:
        bot.reply_to(message, f"–û—à–∏–±–∫–∞: {e}")

# ===================== –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è =====================
jokes = [
    "–ü–æ—á–µ–º—É –∫–æ–º–ø—å—é—Ç–µ—Ä –Ω–µ –º–æ–∂–µ—Ç –ø–æ—Ö—É–¥–µ—Ç—å? –ü–æ—Ç–æ–º—É —á—Ç–æ –æ–Ω –µ—Å—Ç –±–∞–π—Ç—ã!",
    "–ß—Ç–æ —Å–∫–∞–∂–µ—Ç Python, –∫–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏—Ç –ø—Ä–æ–≥—Ä–∞–º–º—É? '–í—ã—Ö–æ–¥'.",
    "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç –∑–∞—Ö–æ–¥–∏—Ç –≤ –±–∞—Ä... –∏ –Ω–µ –≤—ã—Ö–æ–¥–∏—Ç –Ω–∏–∫–æ–≥–¥–∞.",
]

facts = [
    "üí° –°–∞–º–∞—è –¥–ª–∏–Ω–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –≤ –º–∏—Ä–µ ‚Äî —ç—Ç–æ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–π –≥–µ–Ω–æ–º.",
    "üí° –ü–µ—Ä–≤—ã–π –∫–æ–º–ø—å—é—Ç–µ—Ä –≤–µ—Å–∏–ª –±–æ–ª–µ–µ 27 —Ç–æ–Ω–Ω.",
    "üí° –ü–µ—Ä–≤–∞—è —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞ –±—ã–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ 1971 –≥–æ–¥—É.",
]

quotes = [
    "üîπ ¬´–ë—É–¥—å —Å–æ–±–æ–π, –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ä–æ–ª–∏ —É–∂–µ –∑–∞–Ω—è—Ç—ã.¬ª ‚Äì –û—Å–∫–∞—Ä –£–∞–π–ª—å–¥",
    "üîπ ¬´–ñ–∏–∑–Ω—å ‚Äî —ç—Ç–æ —Ç–æ, —á—Ç–æ —Å —Ç–æ–±–æ–π –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç, –ø–æ–∫–∞ —Ç—ã —Å—Ç—Ä–æ–∏—à—å –ø–ª–∞–Ω—ã.¬ª ‚Äì –î–∂–æ–Ω –õ–µ–Ω–Ω–æ–Ω",
    "üîπ ¬´–°–∏–ª–∞ –Ω–µ –≤ —Ç–æ–º, —á—Ç–æ–±—ã –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –ø–∞–¥–∞—Ç—å, –∞ –≤ —Ç–æ–º, —á—Ç–æ–±—ã –ø–æ–¥–Ω–∏–º–∞—Ç—å—Å—è –∫–∞–∂–¥—ã–π —Ä–∞–∑.¬ª ‚Äì –ö–æ–Ω—Ñ—É—Ü–∏–π",
]

@bot.message_handler(commands=['joke'])
def tell_joke(message):
    bot.send_message(message.chat.id, random.choice(jokes))

@bot.message_handler(commands=['fact'])
def tell_fact(message):
    bot.send_message(message.chat.id, random.choice(facts))

@bot.message_handler(commands=['quote'])
def tell_quote(message):
    bot.send_message(message.chat.id, random.choice(quotes))

@bot.message_handler(commands=['cat'])
def send_cat_photo(message):
    try:
        r = requests.get("https://api.thecatapi.com/v1/images/search").json()
        bot.send_photo(message.chat.id, r[0]['url'])
    except Exception:
        bot.send_message(message.chat.id, "üòø –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–æ—Ç–∏–∫–∞.")

@bot.message_handler(commands=['inspire'])
def inspire(message):
    inspirations = [
        "üî• –ù–∏–∫–æ–≥–¥–∞ –Ω–µ —Å–¥–∞–≤–∞–π—Å—è. –í–µ–ª–∏–∫–∏–µ –¥–µ–ª–∞ —Ç—Ä–µ–±—É—é—Ç –≤—Ä–µ–º–µ–Ω–∏.",
        "üöÄ –°–µ–≥–æ–¥–Ω—è—à–Ω–∏–µ —É—Å–∏–ª–∏—è ‚Äî —ç—Ç–æ –∑–∞–≤—Ç—Ä–∞—à–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã.",
        "üí™ –°–∞–º–æ–µ —Ç—Ä—É–¥–Ω–æ–µ ‚Äî –Ω–∞—á–∞—Ç—å. –î–∞–ª—å—à–µ –±—É–¥–µ—Ç –ª–µ–≥—á–µ!"
    ]
    bot.send_message(message.chat.id, random.choice(inspirations))

@bot.message_handler(commands=['dice'])
def roll_dice(message):
    bot.send_dice(message.chat.id)

# ===================== –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ =====================
def download_video_from_url(url):
    api_url = "https://save-tube-video-download.p.rapidapi.com/download"
    headers = {
        "X-RapidAPI-Key": SAVETUBE_KEY,
        "X-RapidAPI-Host": "save-tube-video-download.p.rapidapi.com"
    }
    params = {"url": url}
    try:
        response = requests.get(api_url, headers=headers, params=params, timeout=15)
        data = response.json()
        if data and isinstance(data.get("links"), list):
            for item in data["links"]:
                if item.get("type") == "mp4" and item.get("url"):
                    return item["url"]
    except Exception as e:
        print("–û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è:", e)
    return None

@bot.message_handler(func=lambda m: "tiktok.com" in m.text or "youtu" in m.text)
def handle_video(message):
    bot.send_chat_action(message.chat.id, 'upload_video')
    bot.send_message(message.chat.id, "‚è¨ –ü—ã—Ç–∞—é—Å—å —Å–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ...")
    video_link = download_video_from_url(message.text.strip())
    if video_link:
        try:
            bot.send_video(message.chat.id, video_link)
        except Exception:
            bot.send_message(message.chat.id, "üé¨ –í–∏–¥–µ–æ —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–µ. –í–æ—Ç —Å—Å—ã–ª–∫–∞:\n" + video_link)
    else:
        bot.send_message(message.chat.id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ. –ü–æ–ø—Ä–æ–±—É–π –¥—Ä—É–≥—É—é —Å—Å—ã–ª–∫—É.")

# ===================== –ó–∞–ø—É—Å–∫ =====================
def start_bot():
    bot.remove_webhook()
    bot.infinity_polling()

if __name__ == '__main__':
    Thread(target=start_bot).start()
    app.run(host='0.0.0.0', port=int(os.environ.get("PORT", 5000)))