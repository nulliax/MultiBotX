import os import telebot from telebot import types from flask import Flask, request from dotenv import load_dotenv import random import time

–ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è

load_dotenv() TOKEN = os.getenv("TOKEN") bot = telebot.TeleBot(TOKEN)

app = Flask(name)

–•—Ä–∞–Ω–∏–ª–∏—â–∞ –¥–∞–Ω–Ω—ã—Ö

user_stats = {} logs = []

üìå –û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é

@bot.message_handler(commands=['start', 'help', 'menu']) def send_welcome(message): markup = types.ReplyKeyboardMarkup(resize_keyboard=True) btn1 = types.KeyboardButton("üé≤ –ö–∏–Ω—É—Ç—å –∫—É–±–∏–∫") btn2 = types.KeyboardButton("üòÇ –®—É—Ç–∫–∞") btn3 = types.KeyboardButton("üì∏ –§–æ—Ç–æ –∫–æ—Ç–∏–∫–∞") btn4 = types.KeyboardButton("üí¨ –¶–∏—Ç–∞—Ç–∞") btn5 = types.KeyboardButton("üß† –§–∞–∫—Ç") btn6 = types.KeyboardButton("ü¶ç Donke") markup.add(btn1, btn2, btn3, btn4, btn5, btn6) bot.send_message(message.chat.id, "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –º–Ω–æ–≥–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –±–æ—Ç MultiBotX. –í—ã–±–µ—Ä–∏ –æ–ø—Ü–∏—é –Ω–∏–∂–µ:", reply_markup=markup) log_command(message, "/start")

üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤

@bot.message_handler(commands=['stats']) def stats(message): if is_admin(message): total_users = len(user_stats) total_logs = len(logs) text = f"üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>\nüë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {total_users}\nüìù –ö–æ–º–∞–Ω–¥ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {total_logs}" bot.send_message(message.chat.id, text, parse_mode='HTML') log_command(message, "/stats")

üßæ –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ

def log_command(message, command): logs.append({ 'user': message.from_user.id, 'command': command, 'time': time.strftime('%Y-%m-%d %H:%M:%S') }) user_stats[message.from_user.id] = user_stats.get(message.from_user.id, 0) + 1

üõ° –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∞–¥–º–∏–Ω–∞

def is_admin(message): chat_member = bot.get_chat_member(message.chat.id, message.from_user.id) return chat_member.status in ['administrator', 'creator']

üé≤ –ö—É–±–∏–∫

@bot.message_handler(func=lambda msg: msg.text == "üé≤ –ö–∏–Ω—É—Ç—å –∫—É–±–∏–∫") def roll_dice(message): bot.send_dice(message.chat.id) log_command(message, "dice")

üòÇ –®—É—Ç–∫–∏

jokes = [ "–ü–æ—á–µ–º—É –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç—ã –ø—É—Ç–∞—é—Ç –•—ç–ª–ª–æ—É–∏–Ω –∏ –†–æ–∂–¥–µ—Å—Ç–≤–æ? –ü–æ—Ç–æ–º—É —á—Ç–æ OCT 31 = DEC 25.", "–£ –º–µ–Ω—è –±—ã–ª –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç—Å–∫–∏–π —é–º–æ—Ä, –Ω–æ –æ–Ω –Ω–µ —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–ª—Å—è.", "–ö–∞–∫ –∑–æ–≤—É—Ç —Å–æ–±–∞–∫—É –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞? –ì–∏—Ç!", "404: –®—É—Ç–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞." ]

@bot.message_handler(func=lambda msg: msg.text == "üòÇ –®—É—Ç–∫–∞") def joke(message): bot.send_message(message.chat.id, random.choice(jokes)) log_command(message, "joke")

üì∏ –§–æ—Ç–æ –∫–æ—Ç–∏–∫–∞

@bot.message_handler(func=lambda msg: msg.text == "üì∏ –§–æ—Ç–æ –∫–æ—Ç–∏–∫–∞") def cat(message): photos = [ "https://cataas.com/cat", "https://cataas.com/cat/cute", "https://cataas.com/cat/says/Hello" ] bot.send_photo(message.chat.id, random.choice(photos)) log_command(message, "cat")

üí¨ –¶–∏—Ç–∞—Ç—ã

quotes = [ "–¢–æ—Ç, –∫—Ç–æ —Ö–æ—á–µ—Ç ‚Äì –∏—â–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏, –∫—Ç–æ –Ω–µ —Ö–æ—á–µ—Ç ‚Äì –∏—â–µ—Ç –ø—Ä–∏—á–∏–Ω—ã.", "–ë—É–¥—å —Ç–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ–º, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—á–µ—à—å –≤–∏–¥–µ—Ç—å –≤ –º–∏—Ä–µ.", "–°–ª–æ–∂–Ω–æ—Å—Ç–∏ –¥–µ–ª–∞—é—Ç –Ω–∞—Å —Å–∏–ª—å–Ω–µ–µ.", "–ü—É—Ç—å –≤ —Ç—ã—Å—è—á—É –ª–∏ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –æ–¥–Ω–æ–≥–æ —à–∞–≥–∞.", "–ò–Ω–æ–≥–¥–∞ –ª—É—á—à–∏–π —Å–ø–æ—Å–æ–± —á—Ç–æ-—Ç–æ —Å–¥–µ–ª–∞—Ç—å ‚Äî –ø—Ä–æ—Å—Ç–æ –Ω–∞—á–∞—Ç—å." ]

@bot.message_handler(func=lambda msg: msg.text == "üí¨ –¶–∏—Ç–∞—Ç–∞") def quote(message): bot.send_message(message.chat.id, random.choice(quotes)) log_command(message, "quote")

üß† –§–∞–∫—Ç—ã

facts = [ "–ö—Ä–æ–≤—å –≤ –≤–µ–Ω–∞—Ö —Å–∏–Ω—è—è —Ç–æ–ª—å–∫–æ –Ω–∞ —Ä–∏—Å—É–Ω–∫–∞—Ö, –≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ ‚Äî –æ–Ω–∞ –≤—Å–µ–≥–¥–∞ –∫—Ä–∞—Å–Ω–∞—è.", "–ü—á—ë–ª—ã –º–æ–≥—É—Ç —É–∑–Ω–∞–≤–∞—Ç—å –ª–∏—Ü–∞ –ª—é–¥–µ–π.", "–û—Å—å–º–∏–Ω–æ–≥–∏ –∏–º–µ—é—Ç —Ç—Ä–∏ —Å–µ—Ä–¥—Ü–∞.", "–ú–æ–∑–≥ —Å–æ—Å—Ç–æ–∏—Ç –Ω–∞ 75% –∏–∑ –≤–æ–¥—ã." ]

@bot.message_handler(func=lambda msg: msg.text == "üß† –§–∞–∫—Ç") def fact(message): bot.send_message(message.chat.id, random.choice(facts)) log_command(message, "fact")

ü¶ç Donke ‚Äî —Ç–æ–∫—Å–∏—á–Ω—ã–µ —à—É—Ç–∫–∏

@bot.message_handler(func=lambda msg: msg.text == "ü¶ç Donke") def donke(message): donke_jokes = [ "Donke –Ω–∞—Å—Ç–æ–ª—å–∫–æ –≥–ª—É–ø, —á—Ç–æ –ø—ã—Ç–∞–ª—Å—è –ø–æ–µ—Å—Ç—å Wi-Fi.", "Donke –¥—É–º–∞–µ—Ç, —á—Ç–æ RAM ‚Äî —ç—Ç–æ –±–∞—Ä–∞—à–µ–∫.", "Donke —É—Å—Ç–∞–Ω–æ–≤–∏–ª –∞–Ω—Ç–∏–≤–∏—Ä—É—Å –Ω–∞ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫. –ù–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π.", "Donke –ø—Ä–æ—Å–∏—Ç –±–æ—Ç–∞ —Å–∫–∞—á–∞—Ç—å —Å–µ–±–µ –º–æ–∑–≥." ] bot.send_message(message.chat.id, random.choice(donke_jokes)) log_command(message, "donke")

‚öíÔ∏è –ú–æ–¥–µ—Ä–∞—Ü–∏—è (–±–µ–∑ /)

@bot.message_handler(func=lambda msg: msg.reply_to_message is not None) def moderation(message): cmd = message.text.lower() target = message.reply_to_message.from_user.id chat_id = message.chat.id if not is_admin(message): return

if "–º—É—Ç" in cmd:
    bot.restrict_chat_member(chat_id, target, until_date=time.time()+600)
    bot.reply_to(message, "üîá –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–º—É—á–µ–Ω –Ω–∞ 10 –º–∏–Ω—É—Ç.")
elif "—Ä–∞–∑–º—É—Ç" in cmd or "–∞–Ω–º—É—Ç" in cmd:
    bot.restrict_chat_member(chat_id, target, can_send_messages=True)
    bot.reply_to(message, "üîä –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–∑–º—É—á–µ–Ω.")
elif "–≤–∞—Ä–Ω" in cmd:
    bot.reply_to(message, "‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –≤—ã–¥–∞–Ω–æ.")
elif "–±–∞–Ω" in cmd:
    bot.ban_chat_member(chat_id, target)
    bot.reply_to(message, "‚õî –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–∞–Ω–µ–Ω.")
elif "—Ä–∞–∑–±–∞–Ω" in cmd or "—É–Ω–±–∞–Ω" in cmd:
    bot.unban_chat_member(chat_id, target)
    bot.reply_to(message, "‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–∑–±–∞–Ω–µ–Ω.")

log_command(message, cmd)

üß† –ê–≤—Ç–æ–æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Å—ã–ª–æ–∫ (–ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ TikTok/YouTube)

@bot.message_handler(func=lambda msg: "tiktok.com" in msg.text or "youtube.com" in msg.text or "youtu.be" in msg.text) def try_download(message): bot.reply_to(message, "‚è¨ –ü—ã—Ç–∞—é—Å—å —Å–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ... (—Ñ—É–Ω–∫—Ü–∏—è –≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω–∞)") log_command(message, "video_link")

üåê Flask —Å–µ—Ä–≤–µ—Ä

@app.route('/', methods=['GET', 'POST']) def index(): if request.method == 'POST': update = telebot.types.Update.de_json(request.stream.read().decode("utf-8")) bot.process_new_updates([update]) return "", 200 return "MultiBotX –∑–∞–ø—É—â–µ–Ω!"

üîÑ –£–¥–∞–ª—è–µ–º –≤–µ–±—Ö—É–∫ –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞

bot.remove_webhook() bot.set_webhook(url=os.getenv("RENDER_EXTERNAL_URL"))

